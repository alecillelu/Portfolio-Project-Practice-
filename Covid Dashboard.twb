<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0618.0924                               -->
<workbook original-version='18.1' source-build='2024.1.4 (20241.24.0618.0924)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.0k5vnr11ian1t21e4phbg0mgswty' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1hdly1n1268opt1e7647t0d0nrh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dad-Mom/Downloads/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hdly1n1268opt1e7647t0d0nrh0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hdly1n1268opt1e7647t0d0nrh0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9029B0342B7E406F911C9D493AE4238A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9029B0342B7E406F911C9D493AE4238A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9029B0342B7E406F911C9D493AE4238A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9029B0342B7E406F911C9D493AE4238A]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Dad-Mom/AppData/Local/Temp/TableauTemp/#TableauTemp_0a5i6g90skoyxu1ghewtb1g44oe7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/05/2024 06:36:34 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9029B0342B7E406F911C9D493AE4238A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9029B0342B7E406F911C9D493AE4238A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9029B0342B7E406F911C9D493AE4238A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9029B0342B7E406F911C9D493AE4238A'>
            <properties context=''>
              <relation connection='excel-direct.1hdly1n1268opt1e7647t0d0nrh0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1pnslwh0x9bw2f1fhvzq40w5vrvt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0cndlaq16yi89q16gp4ea1bosmoc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dad-Mom/Downloads/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0cndlaq16yi89q16gp4ea1bosmoc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0cndlaq16yi89q16gp4ea1bosmoc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_28FD7E13017B47819437B94E9C1C00DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_28FD7E13017B47819437B94E9C1C00DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_28FD7E13017B47819437B94E9C1C00DD]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Dad-Mom/AppData/Local/Temp/TableauTemp/#TableauTemp_0b24wrw03agz781b2kv0q1g8ar8z.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/05/2024 06:37:00 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_28FD7E13017B47819437B94E9C1C00DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_28FD7E13017B47819437B94E9C1C00DD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#8074a8'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_28FD7E13017B47819437B94E9C1C00DD'>
            <properties context=''>
              <relation connection='excel-direct.0cndlaq16yi89q16gp4ea1bosmoc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1bw1prp0900q8m1fvg7m6119xvwg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0q017s507smry51eb2oy50ml2ijb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dad-Mom/Downloads/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0q017s507smry51eb2oy50ml2ijb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0q017s507smry51eb2oy50ml2ijb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_861687AE91514A3D949625DC54E8AF4C]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Dad-Mom/AppData/Local/Temp/TableauTemp/#TableauTemp_13pwj921fuqckn17vtm2p10p0osq.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/05/2024 06:37:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_861687AE91514A3D949625DC54E8AF4C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_861687AE91514A3D949625DC54E8AF4C'>
            <properties context=''>
              <relation connection='excel-direct.0q017s507smry51eb2oy50ml2ijb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.07jv2db0j2ruzg1gw3tf915xutfx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.17oroe71jhd5r01eafzvy1j5f735'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dad-Mom/Downloads/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17oroe71jhd5r01eafzvy1j5f735' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17oroe71jhd5r01eafzvy1j5f735' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Dad-Mom/AppData/Local/Temp/TableauTemp/#TableauTemp_1tom8681erftq212xt5fs09qu0po.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/05/2024 06:38:36 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#7c7270'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8074a8'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8074a8'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9b93c9'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9b93c9'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9c9290'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9c9290'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b173a0'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c46487'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c46487'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c46487'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c5bfbe'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c5bfbe'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c5bfbe'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c6c1f0'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c6c1f0'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c799bc'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ddb5d5'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ddb5d5'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f498b6'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbed1'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbed1'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8C3A8EF70E12426A82B4127D6C5BE19C'>
            <properties context=''>
              <relation connection='excel-direct.17oroe71jhd5r01eafzvy1j5f735' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.0k5vnr11ian1t21e4phbg0mgswty' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5vnr11ian1t21e4phbg0mgswty'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5vnr11ian1t21e4phbg0mgswty].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0k5vnr11ian1t21e4phbg0mgswty].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0k5vnr11ian1t21e4phbg0mgswty].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0k5vnr11ian1t21e4phbg0mgswty].[:Measure Names]' value='130' />
            <format attr='height' value='31' />
            <format attr='color' value='#ffffff' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
            <format attr='text-format' field='[federated.0k5vnr11ian1t21e4phbg0mgswty].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#c4c5f0' />
            <format attr='background-color' scope='cols' value='#c4c5f0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='rows' value='12' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='cols' value='#7777b3' />
            <format attr='color' scope='rows' value='#ffddfc' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#ffddfc' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' scope='cols' value='#c4c5f0d3' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0k5vnr11ian1t21e4phbg0mgswty].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#d496c0' fontname='Tableau Semibold' fontsize='12'>&lt;</run>
                <run bold='true' fontcolor='#d496c0' fontname='Tableau Semibold' fontsize='12'>[federated.0k5vnr11ian1t21e4phbg0mgswty].[Multiple Values]</run>
                <run bold='true' fontcolor='#d496c0' fontname='Tableau Semibold' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0k5vnr11ian1t21e4phbg0mgswty].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B79ACD45-2C13-446C-AFF7-D78DDA1465FB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count By Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1pnslwh0x9bw2f1fhvzq40w5vrvt' />
          </datasources>
          <datasource-dependencies datasource='federated.1pnslwh0x9bw2f1fhvzq40w5vrvt'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]' direction='DESC' using='[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]' value='99' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{C95A5D9B-CB6B-4F08-9046-6B8FF90A7A5C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1bw1prp0900q8m1fvg7m6119xvwg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bw1prp0900q8m1fvg7m6119xvwg'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[Longitude (generated)]' field-type='quantitative' max='18700217.019180238' min='-21844430.46433381' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[Latitude (generated)]' field-type='quantitative' max='17582761.876285337' min='-9342640.9177869763' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[sum:PercentPopulationInfected:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2e3</color>
                <color>#e2b5d7</color>
                <color>#db99cb</color>
                <color>#d47fbf</color>
                <color>#cd66b3</color>
                <color>#c64fa8</color>
                <color>#bf399d</color>
                <color>#b82492</color>
                <color>#b11188</color>
                <color>#aa007f</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffddfc' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected Per Country'>
              <formatted-text>
                <run>Percent Population Infected Per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[none:Location:nk]' />
              <color column='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='224' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw1prp0900q8m1fvg7m6119xvwg].[Latitude (generated)]</rows>
        <cols>[federated.1bw1prp0900q8m1fvg7m6119xvwg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FBECB5EE-2132-4281-8502-8F8CCD1B0227}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.07jv2db0j2ruzg1gw3tf915xutfx' />
          </datasources>
          <datasource-dependencies datasource='federated.07jv2db0j2ruzg1gw3tf915xutfx'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]' />
              <text column='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]' />
              <color column='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Forecast Indicator:nk]' />
              <text column='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#250043'>&lt;</run>
                <run fontcolor='#250043'>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]</run>
                <run fontcolor='#250043'>&gt;</run>
                <run fontcolor='#250043'>Æ&#10;</run>
                <run fontcolor='#250043'><![CDATA[<[federated.07jv2db0j2ruzg1gw3tf915xutfx].[fVal:avg:PercentPopulationInfected:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{35FB3EB1-0F0A-4982-9826-D92BD5E73F94}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='38243' id='8' param='horz' type-v2='layout-flow' w='98724' x='638' y='60767'>
            <zone h='38243' id='6' type-v2='layout-basic' w='86922' x='638' y='60767'>
              <zone h='38243' id='12' name='Sheet 4' w='86922' x='638' y='60767'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='148' h='38243' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='11802' x='87560' y='60767'>
              <zone h='38243' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]&#10;[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Forecast Indicator:nk]' type-v2='color' w='11802' x='87560' y='60767'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='24505' id='3' name='Sheet 1' w='39752' x='638' y='990'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='59777' id='10' name='Sheet 3' w='47170' x='40390' y='990'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='59777' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11802' x='87560' y='990'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='35272' id='5' name='Sheet 2' w='39752' x='638' y='25495'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98020' id='14' param='vert' type-v2='layout-flow' w='98724' x='638' y='990'>
                <zone fixed-size='188' h='24505' id='3' is-fixed='true' name='Sheet 1' w='39752' x='638' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59777' id='10' is-fixed='true' name='Sheet 3' w='47170' x='40390' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='59777' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11802' x='87560' y='990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='35272' id='5' is-fixed='true' name='Sheet 2' w='39752' x='638' y='25495'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38243' id='12' is-fixed='true' name='Sheet 4' w='86922' x='638' y='60767'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38243' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]&#10;[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Forecast Indicator:nk]' type-v2='color' w='11802' x='87560' y='60767'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DB808088-0434-45A8-B617-72CA34AE263D}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5vnr11ian1t21e4phbg0mgswty].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A622B02-9F1D-4532-B703-FC444B9C9CE0}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8E12CCD-06CA-40CC-AD46-03A522B0852D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bw1prp0900q8m1fvg7m6119xvwg].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bw1prp0900q8m1fvg7m6119xvwg].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{10AA6023-A00B-4851-82B9-81AA6A046FCA}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]&#10;[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Forecast Indicator:nk]</field>
            <field>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]</field>
            <field>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCA944A7-6DB1-4938-B8DB-A95D9B01B73C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.1pnslwh0x9bw2f1fhvzq40w5vrvt].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Forecast Indicator:nk]</field>
              <field>[federated.07jv2db0j2ruzg1gw3tf915xutfx].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{B45B6C53-01B6-41DE-8A2C-4C0CC806208D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='55' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      TuPlpaTdLRYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      nmj+NyP1sz6NDzw3AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
